{"version":3,"sources":["Components/MainMenuComponents/MenuView.js","Components/MainMenuComponents/DeleteView.js","Components/MainMenuComponents/AboutView.js","Components/MainMenuComponents/CreateCharacterView.js","Components/GameComponents/HUD/PlayerView.js","Components/GameComponents/HUD/EnemyView.js","Components/GameComponents/HUD/LogView.js","global.js","Components/GameComponents/HUD/Windows/LevelUpWindow.js","Components/GameComponents/GameVars/Mobs.js","Components/GameComponents/GameVars/Locations.js","Components/GameComponents/GameFunctions/Generator.js","Components/GameComponents/GameFunctions/PostBattle.js","Components/GameComponents/GameFunctions/GameLogger.js","Components/GameComponents/LogicRoot.js","Components/GameComponents/GameFunctions/Enemy.js","Components/GameComponents/GameFunctions/Player.js","Components/GameComponents/HUD/ActionView.js","Components/GameComponents/GameMenuRoot.js","Components/GameComponents/GameRoot.js","Components/MainMenuComponents/MenuRoot.js","Pages/Home.js","_shared/_header.js","_shared/_footer.js","App.js","index.js"],"names":["MenuView","props","hideButton","undefined","JSON","parse","localStorage","getItem","disabled","className","Row","Col","md","Button","variant","block","onClick","selection","DeleteView","useState","details","setDetails","Object","keys","map","item","key","removeItem","AboutView","CreateCharacterView","errors","setErrors","username","level","xp","gold","currentHp","Hp","Attack","Defence","Form","onSubmit","event","preventDefault","Label","htmlFor","Control","type","id","onChange","field","target","value","UpdateDetailsField","formErrors","push","length","setItem","stringify","SetCharacterDetails","PlayerView","player","EnemyView","enemy","name","eHp","attack","defence","LogView","history","setHistory","useEffect","XpTable","xpTable","x","mod","pre","Math","floor","pow","console","log","initXpTable","SaveData","data","LoadData","RandomNumber","min","max","random","IsLevellingUp","setLevellingUp","LevelUpWindow","Modal","Header","closeButton","Title","Body","onHide","Mobs","Rat","locationId","xpReward","goldReward","Frog","Snake","Blob","Wolf","ForestEnemy","SwampEnemy","DesertEnemy","MountainsEnemy","TundraEnemy","GetLocation","loc","values","Locations","filter","pop","getMobs","Grassland","Forest","Swamp","Desert","Mountains","Tundra","CreateEnemy","enemyDead","setEnemy","setEnemyDead","currentLocation","rand","mob","index","clone","forEach","PlayerXp","charData","setCharData","GameLogger","addMessageToLog","msg","logs","unshift","this","LogicRoot","Globals","ticker","setTicker","enemyDiedThisTick","setEnemyDiedThisTick","logger","running","setRunning","Spawner","t","setInterval","GameTick","clearInterval","Enemy","PostBattle","dmg","Player","backdrop","keyboard","show","Error","Container","dead","ActionView","action","setAction","setCurrentLocation","actionButtons","locs","handleActionButtonClick","arr","handleLocationButtonClick","button","GameMenuRoot","GameRoot","MenuRoot","menuChoice","setMenuChoice","Home","Footer","App","exact","path","component","ReactDOM","render","basename","process","nextTick","PUBLIC_URL","document","getElementById"],"mappings":"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","file":"static/js/main.70b25c96.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Col, Row, Button } from \"react-bootstrap\";\r\n\r\nconst MenuView = (props) => {\r\n    let hideButton = JSON.parse(localStorage.getItem(\"charData\")) == undefined ? {disabled: true} : {disabled: false};\r\n    return(\r\n        <div className=\"menu-root\">\r\n            <Row className=\"justify-content-center\">\r\n                <Col>\r\n                    <h3>Select an option</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={3}>\r\n                    <Button variant=\"primary\" block className=\"my-1\" {...hideButton} onClick={(() => props.selection(1))}>Play</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={3}>\r\n                    <Button variant=\"primary\" block className=\"my-1\" onClick={(() => props.selection(2))}>Create</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={3}>\r\n                    <Button variant=\"primary\" block className=\"my-1\" {...hideButton} onClick={(() => props.selection(3))}>Delete</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={3}>\r\n                    <Button variant=\"primary\" block className=\"my-1\" onClick={(() => props.selection(4))}>About</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuView;","import React, { useState } from \"react\";\r\nimport { Col, Row, Button } from \"react-bootstrap\";\r\n\r\nconst DeleteView = (props) => {\r\n    const [details, setDetails] = useState(JSON.parse(localStorage.getItem(\"charData\")));\r\n    const deleteChar = () => {\r\n        localStorage.removeItem(\"charData\");\r\n        setDetails(null);\r\n    }\r\n    if (details == null)\r\n     return(\r\n        <div className=\"menu-root\">\r\n            <h5>Deleted</h5>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={4} className=\"mt-2\">\r\n                    <Button variant=\"primary\" block className=\"my-1\" onClick={() => props.selection(0)}>Back</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n     ); else return(\r\n        <div className=\"menu-root\">\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={10}>\r\n                    {\r\n                        Object.keys(details).map((item, key) => (\r\n                            <Row key={key}>\r\n                                <Col md={4}>\r\n                                    <h5>{item}:&nbsp;</h5>\r\n                                </Col>\r\n                                <Col>\r\n                                    <p>{details[item]}</p>\r\n                                </Col>\r\n                            </Row>\r\n                        ))\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={4}>\r\n                    <Button variant=\"primary\" block className=\"my-1\" onClick={() => deleteChar()}>Delete</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={4} className=\"mt-2\">\r\n                    <Button variant=\"primary\" block className=\"my-1\" onClick={() => props.selection(0)}>Back</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteView;","import React from \"react\";\r\nimport { Col, Row, Button } from \"react-bootstrap\";\r\n\r\nconst AboutView = (props) => {\r\n    \r\n    return(\r\n        <div className=\"menu-root\">\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={4} className=\"mt-1\">\r\n                    <Button variant=\"primary\" block className=\"my-1\" onClick={() => props.selection(0)}>Back</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutView;","import React, { useState } from \"react\";\r\nimport { Col, Row, Button, Form } from \"react-bootstrap\";\r\n\r\nconst CreateCharacterView = (props) => {\r\n    const [errors, setErrors] = useState([]);\r\n    const [details] = useState({ \r\n        username: \"\", \r\n        level: \"\", \r\n        xp: \"\", \r\n        gold: \"\",\r\n        currentHp: 10,\r\n        Hp: 10,\r\n        Attack: 1,\r\n        Defence: 1,\r\n        \r\n    });\r\n    \r\n    const SetCharacterDetails = () => {\r\n        let formErrors = [];\r\n        if (details.username === \"\") {\r\n            formErrors.push(\"Must enter a name\");\r\n            setErrors(formErrors);\r\n        } \r\n\r\n        if (details.username.length > 20) {\r\n            formErrors.push(\"Name too long\");\r\n            setErrors(formErrors);\r\n        }\r\n\r\n        if (formErrors.length === 0) {\r\n            details.level = 1;\r\n            details.xp = 0;\r\n            details.gold = 0;\r\n            localStorage.setItem(\"charData\", JSON.stringify(details));\r\n            props.selection(0);\r\n        }\r\n    }\r\n\r\n    const UpdateDetailsField = (event, field) => {\r\n        switch(field) {\r\n            case 0: \r\n                details.username = event.target.value;\r\n                break;\r\n            default: \r\n                break;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"menu-root\">\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"mb-5\">\r\n                    <h3>Create</h3>\r\n                </Col>\r\n            </Row>\r\n            <Form onSubmit={event => event.preventDefault()}>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md={3} className=\"align-self-center\">\r\n                        <Form.Label htmlFor=\"username-input\">Username</Form.Label>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Form.Control type=\"text\" id=\"username-input\" onChange={event => UpdateDetailsField(event, 0)} />\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    errors.map((item, key) => (\r\n                        <Row key={key} className=\"justify-content-center\">\r\n                            <Col>\r\n                                <h5>{item}</h5>\r\n                            </Col>\r\n                        </Row>\r\n                    ))\r\n                }\r\n            </Form>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={4} className=\"mt-5\">\r\n                    <Button variant=\"primary\" block className=\"my-1\" onClick={() => SetCharacterDetails(details)}>Save</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={4} className=\"mt-1\">\r\n                    <Button variant=\"primary\" block className=\"my-1\" onClick={() => props.selection(0)}>Back</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateCharacterView;","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport \"../../../css/game.css\";\r\n\r\nconst PlayerView = props => {\r\n    return(\r\n        <div className=\"box\">\r\n            <Row>\r\n                <Col>\r\n                    <h5>{props.player.username}</h5>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <h5>Level:&nbsp;{props.player.level}</h5>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerView;","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport \"../../../css/game.css\";\r\n\r\nconst EnemyView = props => {\r\n    return(\r\n        <div className=\"half-height-box\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <h5>Name:&nbsp;</h5>\r\n                </Col>\r\n                <Col>\r\n                    <p>{props.enemy.name}</p>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <h5>Level:&nbsp;</h5>\r\n                </Col>\r\n                <Col>\r\n                    <p>{props.enemy.level}</p>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <h5>Health:&nbsp;</h5>\r\n                </Col>\r\n                <Col>\r\n                    <p>{props.enemy.eHp}</p>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <h5>Attack:&nbsp;</h5>\r\n                </Col>\r\n                <Col>\r\n                    <p>{props.enemy.attack}</p>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <h5>Defence:&nbsp;</h5>\r\n                </Col>\r\n                <Col>\r\n                    <p>{props.enemy.defence}</p>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EnemyView;","import React, { useState, useEffect } from \"react\";\r\nimport \"../../../css/game.css\";\r\n\r\nconst LogView = (props) => {\r\n    const [history, setHistory] = useState(props.history);\r\n    useEffect(() => {\r\n        setHistory(props.history);\r\n    }, [props.history]);\r\n    return(\r\n        <div id=\"log-box\" className=\"half-height-box\">\r\n            {\r\n                history.map((item, key) => (\r\n                    <div key={key}>\r\n                        {item}\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogView;","const initXpTable = () => {\r\n    //Initialize the xp table\r\n    const BASE_XP = 550;\r\n    let xpTable = [];\r\n    for (let x = 0; x < 200; x++) {\r\n        if (x === 0) { xpTable.push(0); }\r\n        else if (x === 1) { xpTable.push(0); }\r\n        else {\r\n            let mod = x + 80;\r\n            let pre = Math.floor(Math.pow(BASE_XP * (x * 1.016), (mod * 0.008)));\r\n            xpTable.push(Math.floor((pre/9) + xpTable[x-1]));\r\n            //xpTable.push(Math.floor((xpTable[x-1] + (BASE_XP * x)) * 1.0075));\r\n        }\r\n    }\r\n    console.log(xpTable);\r\n    return xpTable;\r\n}\r\n\r\nexport const XpTable = initXpTable();\r\n\r\nexport const SaveData = data => {\r\n    localStorage.setItem(\"charData\", JSON.stringify(data));\r\n}\r\n\r\nexport const LoadData = () => {\r\n    return JSON.parse(localStorage.getItem(\"charData\"));\r\n}\r\n\r\nexport const RandomNumber = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min) ) + min;\r\n}\r\n\r\nexport const CheckLevelUp = (level, xp) => {\r\n    if (xp >= XpTable[level + 1]) {\r\n        setLevellingUp(true);\r\n        return true; \r\n    }\r\n    else return false;\r\n}\r\n\r\nexport const CheckIfDataExists = () => {\r\n    return localStorage.getItem(\"charData\") === undefined ? false : true;\r\n}\r\n\r\nexport const IsLevellingUp = () => {\r\n    console.log(localStorage.getItem(\"levelLock\"));\r\n    return localStorage.getItem(\"levelLock\") === null ? false : true;\r\n}\r\n\r\nexport const setLevellingUp = (x) => {\r\n    x ? localStorage.setItem(\"levelLock\", \"0\") : localStorage.removeItem(\"levelLock\");\r\n}","import React from \"react\";\r\nimport { Modal, Col, Row, Button } from \"react-bootstrap\";\r\nimport * as Player from \"../../GameFunctions/Player\";\r\n\r\nconst LevelUpWindow = (props) => {\r\n    return(\r\n        <Modal {...props}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    Levelled up!\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md={4}>\r\n                        <Button block variant=\"success\" onClick={() => props.onHide(\"0\")}>HP +5</Button>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Button block variant=\"danger\" onClick={() => props.onHide(\"1\")}>Attack +1</Button>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Button block variant=\"primary\" onClick={() => props.onHide(\"2\")}>Defence +1</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default LevelUpWindow;","import { RandomNumber } from \"./../../../global\";\r\n\r\n//Grassland mobs, locationId: 0\r\nexport const Mobs = {\r\n    Rat: {\r\n        locationId: 0,\r\n        name: \"Rat\",\r\n        level: 1,\r\n        eHp: 5,\r\n        defence: 2,\r\n        attack: 1,\r\n        xpReward: () => {\r\n            return RandomNumber(Math.floor(5 /4), Math.floor(5*1.2));\r\n        },\r\n        goldReward: () => {\r\n            return RandomNumber(1, 10);\r\n        }\r\n    },\r\n    \r\n    Frog: {\r\n        locationId: 0,\r\n        name: \"Frog\",\r\n        level: 2,\r\n        eHp: 10,\r\n        defence: 2,\r\n        attack: 3,\r\n        xpReward: () => {\r\n            return RandomNumber(Math.floor(10 /4), Math.floor(10*1.2));\r\n        },\r\n        goldReward: () => {\r\n            return RandomNumber(1, 10);\r\n        }\r\n    },\r\n    \r\n    Snake: {\r\n        locationId: 0,\r\n        name: \"Snake\",\r\n        level: 4,\r\n        eHp: 20,\r\n        defence: 3,\r\n        attack: 5,\r\n        xpReward: () => {\r\n            return RandomNumber(Math.floor(20 /4), Math.floor(20*1.2));\r\n        },\r\n        goldReward: () => {\r\n            return RandomNumber(1, 10);\r\n        }\r\n    },\r\n    \r\n    Blob: {\r\n        locationId: 0,\r\n        name: \"Blob\",\r\n        level: 5,\r\n        eHp: 50,\r\n        defence: 10,\r\n        attack: 6,\r\n        xpReward: () => {\r\n            return RandomNumber(Math.floor(50 /4), Math.floor(50*1.2));\r\n        },\r\n        goldReward: () => {\r\n            return RandomNumber(1, 10);\r\n        }\r\n    },\r\n    \r\n    Wolf: {\r\n        locationId: 0,\r\n        name: \"Wolf\",\r\n        level: 7,\r\n        eHp: 80,\r\n        defence: 5,\r\n        attack: 9,\r\n        xpReward: () => {\r\n            return RandomNumber(Math.floor(80 /4), Math.floor(80*1.2));\r\n        },\r\n        goldReward: () => {\r\n            return RandomNumber(1, 10);\r\n        }\r\n    },\r\n\r\n    ForestEnemy: {\r\n        locationId: 1,\r\n        name: \"ForestEnemy\",\r\n        level: 7,\r\n        eHp: 80,\r\n        defence: 5,\r\n        attack: 9,\r\n        xpReward: () => {\r\n            return RandomNumber(Math.floor(80 /4), Math.floor(80*1.2));\r\n        },\r\n        goldReward: () => {\r\n            return RandomNumber(1, 10);\r\n        }\r\n    },\r\n\r\n    SwampEnemy: {\r\n        locationId: 2,\r\n        name: \"SwampEnemy\",\r\n        level: 7,\r\n        eHp: 80,\r\n        defence: 5,\r\n        attack: 9,\r\n        xpReward: () => {\r\n            return RandomNumber(Math.floor(80 /4), Math.floor(80*1.2));\r\n        },\r\n        goldReward: () => {\r\n            return RandomNumber(1, 10);\r\n        }\r\n    },\r\n\r\n    DesertEnemy: {\r\n        locationId: 3,\r\n        name: \"DesertEnemy\",\r\n        level: 7,\r\n        eHp: 80,\r\n        defence: 5,\r\n        attack: 9,\r\n        xpReward: () => {\r\n            return RandomNumber(Math.floor(80 /4), Math.floor(80*1.2));\r\n        },\r\n        goldReward: () => {\r\n            return RandomNumber(1, 10);\r\n        }\r\n    },\r\n    \r\n    MountainsEnemy: {\r\n        locationId: 4,\r\n        name: \"MountainsEnemy\",\r\n        level: 7,\r\n        eHp: 80,\r\n        defence: 5,\r\n        attack: 9,\r\n        xpReward: () => {\r\n            return RandomNumber(Math.floor(80 /4), Math.floor(80*1.2));\r\n        },\r\n        goldReward: () => {\r\n            return RandomNumber(1, 10);\r\n        }\r\n    },\r\n\r\n    TundraEnemy: {\r\n        locationId: 5,\r\n        name: \"TundraEnemy\",\r\n        level: 7,\r\n        eHp: 80,\r\n        defence: 5,\r\n        attack: 9,\r\n        xpReward: () => {\r\n            return RandomNumber(Math.floor(80 /4), Math.floor(80*1.2));\r\n        },\r\n        goldReward: () => {\r\n            return RandomNumber(1, 10);\r\n        }\r\n    }\r\n}\r\n","import { Mobs } from \"./Mobs\";\r\n\r\nexport const GetLocation = id => {\r\n    let loc = Object.values(Locations)\r\n    .filter(item => item.id === id)\r\n    .pop();\r\n    return {\r\n        id: loc.id,\r\n        name: loc.name,\r\n        getMobs: () => {\r\n            return Object.values(Mobs).filter(item => {\r\n                return item.locationId === id;\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport const Locations = {\r\n    Grassland: {\r\n        id: 0,\r\n        name: \"Grassland\",\r\n    },\r\n\r\n    Forest: {\r\n        id: 1,\r\n        name: \"Forest\"\r\n    },\r\n\r\n    Swamp: {\r\n        id: 2,\r\n        name: \"Swamp\"\r\n    },\r\n\r\n    Desert: {\r\n        id: 3,\r\n        name: \"Desert\"\r\n    },\r\n\r\n    Mountains: {\r\n        id: 4,\r\n        name: \"Mountains\"\r\n    },\r\n\r\n    Tundra: {\r\n        id: 5,\r\n        name: \"Tundra\"\r\n    }\r\n}\r\n","import { GetLocation } from \"./../GameVars/Locations\";\r\nimport { RandomNumber } from \"./../../../global\";\r\n\r\nexport const CreateEnemy = (enemyDead, setEnemy, setEnemyDead, currentLocation) => {\r\n    if (!enemyDead)\r\n        return;\r\n    let rand = RandomNumber(0, GetLocation(currentLocation).getMobs().length);\r\n    let mob = GetLocation(currentLocation).getMobs().map((item, index) => {\r\n        if (index === rand) {\r\n            let clone = {};\r\n            Object.keys(item).forEach(key => {\r\n                clone[key] = item[key];\r\n            });\r\n            return clone;\r\n        } else return null;\r\n    });\r\n    console.log(mob);\r\n    setEnemy(mob[rand]);\r\n    setEnemyDead(false);\r\n}","import { CheckLevelUp, SaveData } from \"../../../global\";\r\n\r\nexport const FightRewards = (charData, setCharData, enemy) => {\r\n    charData.gold += enemy.goldReward();\r\n    setCharData(charData);\r\n}\r\n\r\nexport const PlayerXp = (charData, setCharData, enemy) => {\r\n    charData.xp += enemy.xpReward();\r\n    if (CheckLevelUp(charData.level, charData.xp)) {\r\n        SaveData(charData);\r\n        return true;\r\n    }\r\n    setCharData(charData);\r\n}\r\n","export class GameLogger {\r\n    constructor(history, setHistory) {\r\n        this.history = history;\r\n        this.setHistory = setHistory;\r\n    }\r\n    addMessageToLog = (msg) => {\r\n        let logs = this.history;\r\n        if (logs.length === 20) {\r\n            logs.pop();\r\n        }\r\n        logs.unshift(msg);\r\n        this.setHistory(logs);\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport PlayerView from \"./HUD/PlayerView\";\r\nimport EnemyView from \"./HUD/EnemyView\";\r\nimport LogView from \"./HUD/LogView\";\r\nimport LevelUpWindow from \"./HUD/Windows/LevelUpWindow\";\r\nimport \"../../css/game.css\";\r\nimport * as Globals from \"../../global\";\r\nimport * as Spawner from \"./GameFunctions/Generator\";\r\nimport * as Player from \"./GameFunctions/Player\";\r\nimport * as Enemy from \"./GameFunctions/Enemy\"\r\nimport * as PostBattle from \"./GameFunctions/PostBattle\";\r\nimport { GameLogger } from \"./GameFunctions/GameLogger\";\r\n\r\nconst LogicRoot = (props) => {\r\n    const [charData, setCharData] = useState(Globals.LoadData());\r\n    const [ticker, setTicker] = useState(0);\r\n    const [enemyDead, setEnemyDead] = useState(true);\r\n    const [enemy, setEnemy] = useState({});\r\n    const [history, setHistory] = useState([]);\r\n    const [enemyDiedThisTick, setEnemyDiedThisTick] = useState(false);\r\n    const [logger] = useState(new GameLogger(history, setHistory, ticker))\r\n    const [running, setRunning] = useState(true);\r\n    //const [action, setAction] = useState(props.action);\r\n\r\n    useEffect(() => {\r\n        Spawner.CreateEnemy(enemyDead, setEnemy, setEnemyDead, props.currentLocation);\r\n        if (Globals.IsLevellingUp()) \r\n            setRunning(false);\r\n    }, [props.currentLocation, enemyDead])\r\n\r\n    useEffect(() => {\r\n        if (running) {\r\n            const t = setInterval(() => {\r\n                setTicker(x => x + 1);\r\n                GameTick();\r\n            }, enemyDiedThisTick ? 1500 : 500);\r\n            return () => {\r\n                clearInterval(t);\r\n                if (enemyDiedThisTick)\r\n                    setEnemyDiedThisTick(false);\r\n            };\r\n        }\r\n    });\r\n\r\n    const GameTick = () => {\r\n        if(Enemy.IsDead(enemy, setEnemyDead, logger)) {\r\n            setEnemyDiedThisTick(true);\r\n            Spawner.CreateEnemy(enemyDead, setEnemy, setEnemyDead, props.currentLocation);\r\n            PostBattle.FightRewards(charData, setCharData, enemy, logger, ticker);\r\n            if (PostBattle.PlayerXp(charData, setCharData, enemy, logger, ticker))\r\n                setRunning(false);\r\n            return;\r\n        }\r\n\r\n        Player.PlayerDamage(enemy, setEnemy, enemyDead, setEnemyDead, logger, ticker);\r\n\r\n        Globals.SaveData(charData);\r\n    }\r\n\r\n    const onLevelUpHide = (selection) => {\r\n        Player.LevelUp(charData, setCharData, selection);\r\n        Globals.setLevellingUp(false);\r\n        setRunning(true);\r\n    }\r\n\r\n    return(\r\n        <div className=\"game-root\">\r\n            {\r\n                Globals.IsLevellingUp ? <LevelUpWindow backdrop={\"static\"} keyboard={false} show={!running} onHide={onLevelUpHide}/> : null\r\n            }\r\n            <Container>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <PlayerView player={charData} />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Row>\r\n                            <Col>\r\n                                <EnemyView enemy={enemy} dead={setEnemyDead} />\r\n                            </Col>\r\n                            <Col>\r\n                                <LogView t={ticker} history={history}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogicRoot;\r\n","export const IsDead = (enemy, setEnemyDead, logger) => {\r\n    if(enemy.eHp <= 0) {\r\n        setEnemyDead(true);\r\n        logger.addMessageToLog(`${enemy.name} died!`);\r\n        return true;\r\n    } else \r\n        return false;\r\n}","import { RandomNumber, LoadData } from \"../../../global\";\r\n\r\nexport const PlayerDamage = (enemy, setEnemy, enemyDead, setEnemyDead, logger) => {\r\n    let player = LoadData();\r\n    let dmg = RandomNumber(player[\"Attack\"]-5, player[\"Attack\"]+5);\r\n    dmg = dmg < 1 ? 1 : dmg;\r\n    enemy.eHp -= dmg;\r\n    logger.addMessageToLog(`You hit for ${dmg} damage!`);\r\n    setEnemy(enemy);\r\n}\r\n\r\nexport const LevelUp = (charData, setCharData, selection) => {\r\n    switch(selection) {\r\n        case \"0\": \r\n            charData.Hp += 5;\r\n            charData.level += 1;\r\n            setCharData(charData);\r\n            break;\r\n        case \"1\": \r\n            charData.Attack += 1;\r\n            charData.level += 1;\r\n            setCharData(charData);\r\n            break;\r\n        case \"2\": \r\n            charData.Defence += 1;\r\n            charData.level += 1;\r\n            setCharData(charData);\r\n            break;\r\n        default:\r\n            throw new Error(\"Tried to level up, but failed\");\r\n    }\r\n}","//TODO: Abstraction for this component into other components instead of what it looks like now (ugly)\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Locations } from \"./../GameVars/Locations\";\r\nimport \"../../../css/game.css\";\r\n\r\nconst ActionView = (props) => {\r\n    const [action, setAction] = useState(props.action);\r\n    const [currentLocation, setCurrentLocation] = useState(props.currentLocation);\r\n    const actionButtons = [\r\n        \"Travel\", \"Shop\", \"Heal\", \"Stats\"\r\n    ];\r\n    const locs = Object.keys(Locations);\r\n    useEffect(() => {\r\n        setAction(props.action);\r\n        setCurrentLocation(props.currentLocation);\r\n    }, [props.action, props.currentLocation]);\r\n\r\n    const handleLocationButtonClick = key => {\r\n        props.setCurrentLocation(key);\r\n    }\r\n\r\n    const handleActionButtonClick = key => {\r\n        props.setAction(key);\r\n    }\r\n\r\n    switch(action) {\r\n        case 0: return(\r\n            <>\r\n            <div className=\"wide-box\">\r\n                <div id=\"action-box\">\r\n                    {\r\n                        locs.map((loc, key, arr) => (\r\n                            <Button key={key} variant={currentLocation === key ? \"secondary\" : \"primary\"} className=\"m-2\" onClick={() => handleLocationButtonClick(key) }>{loc}</Button>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div id=\"action-bar\">\r\n                    {\r\n                        actionButtons.map((button, key, arr,) => (\r\n                            <Button key={key} variant={action === key ? \"secondary\" : \"primary\"} className=\"m-2\" onClick={() => handleActionButtonClick(key)}>{button}</Button>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n        case 1: return(\r\n            <>\r\n            <div className=\"wide-box\">\r\n                <div id=\"action-box\">\r\n                    shop\r\n                </div>\r\n                <div id=\"action-bar\">\r\n                    {\r\n                        actionButtons.map((button, key, arr,) => (\r\n                            <Button key={key} variant={action === key ? \"secondary\" : \"primary\"} className=\"m-2\" onClick={() => handleActionButtonClick(key)}>{button}</Button>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n\r\n        case 2: return(\r\n            <>\r\n            <div className=\"wide-box\">\r\n                <div id=\"action-box\">\r\n                    heal\r\n                </div>\r\n                <div id=\"action-bar\">\r\n                    {\r\n                        actionButtons.map((button, key, arr,) => (\r\n                            <Button key={key} variant={action === key ? \"secondary\" : \"primary\"} className=\"m-2\" onClick={() => handleActionButtonClick(key)}>{button}</Button>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n\r\n        case 3: return(\r\n            <>\r\n            <div className=\"wide-box\">\r\n                <div id=\"action-box\">\r\n                    stats\r\n                </div>\r\n                <div id=\"action-bar\">\r\n                    {\r\n                        actionButtons.map((button, key, arr,) => (\r\n                            <Button key={key} variant={action === key ? \"secondary\" : \"primary\"} className=\"m-2\" onClick={() => handleActionButtonClick(key)}>{button}</Button>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n\r\n        default: return(\r\n            <>\r\n            <div className=\"wide-box\">\r\n                <div id=\"action-box\">\r\n                    YOU SHOULDNT BE HERE REEEEEEEEEEEEEEEEE\r\n                </div>\r\n                <div id=\"action-bar\">\r\n                    {\r\n                        actionButtons.map((button, key, arr,) => (\r\n                            <Button key={key} variant={action === key ? \"secondary\" : \"primary\"} className=\"m-2\" onClick={() => handleActionButtonClick(key)}>{button}</Button>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActionView;","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport ActionView from \"./HUD/ActionView\";\r\n\r\nconst GameMenuRoot = (props) => {\r\n    const [currentLocation, setCurrentLocation] = useState(props.currentLocation);\r\n    const [action, setAction] = useState(0);\r\n    useEffect(() => {\r\n        setCurrentLocation(currentLocation);\r\n        props.setCurrentLocation(currentLocation);\r\n    }, [props, currentLocation]);\r\n\r\n    return(\r\n        <div className=\"game-root\">\r\n            <Container>\r\n                <ActionView \r\n                    action={action} \r\n                    setAction={setAction}\r\n                    currentLocation={currentLocation}\r\n                    setCurrentLocation={setCurrentLocation}\r\n                    />\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default GameMenuRoot;","import React, { useState } from \"react\";\r\nimport LogicRoot from \"./LogicRoot\";\r\nimport GameMenuRoot from \"./GameMenuRoot\";\r\n\r\nconst GameRoot = () => {\r\n    const [currentLocation, setCurrentLocation] = useState(0);\r\n    const [action, setAction] = useState(0);\r\n    return(\r\n        <>\r\n            <LogicRoot currentLocation={currentLocation} action={action}/>\r\n            <GameMenuRoot \r\n                currentLocation={currentLocation} \r\n                setCurrentLocation={setCurrentLocation}\r\n                action={action} \r\n                setAction={setAction}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GameRoot;\r\n","import React, { useState } from \"react\";\r\nimport MenuView from \"./MenuView\";\r\nimport DeleteView from \"./DeleteView\";\r\nimport AboutView from \"./AboutView\";\r\nimport CreateCharacterView from \"./CreateCharacterView\";\r\nimport GameRoot from \"../GameComponents/GameRoot\";\r\nimport \"../../css/main-menu.css\";\r\n\r\nconst MenuRoot = () => {\r\n    const [menuChoice, setMenuChoice] = useState(0);\r\n\r\n    switch (menuChoice) {\r\n        default:\r\n        case 0: return <MenuView selection={setMenuChoice} />;\r\n        case 1: return <GameRoot />;\r\n        case 2: return <CreateCharacterView selection={setMenuChoice}/>;\r\n        case 3: return <DeleteView selection={setMenuChoice}/>;\r\n        case 4: return <AboutView selection={setMenuChoice}/>;\r\n    }\r\n}\r\n\r\nexport default MenuRoot;","import React from \"react\";\r\nimport MenuRoot from \"../Components/MainMenuComponents/MenuRoot\";\r\n\r\nconst Home = () => {\r\n    return(\r\n        <>\r\n        <MenuRoot />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\nconst Header = () => {\r\n    return(\r\n        <>\r\n<Row>{/* header */}</Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\nconst Footer = () => {\r\n    return(\r\n        <>\r\n<Row>{/* footer */}</Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"../src/Pages/Home\";\r\nimport Header from \"./_shared/_header\";\r\nimport Footer from \"./_shared/_footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Header />\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n        </Switch>\r\n      </Router>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from './App';\n\nReactDOM.render(<Router basename={process.nextTick.PUBLIC_URL}><App /></Router>, document.getElementById('root'));"],"sourceRoot":""}